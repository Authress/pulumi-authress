{
    "name": "authress",
    "displayName": "Authress",
    "description": "A Pulumi package for creating and managing Authress resources.",
    "keywords": [
        "pulumi",
        "authress",
        "category/cloud",
        "authorization",
        "authentication"
    ],
    "homepage": "https://authress.io",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`authress` Terraform Provider](https://github.com/Authress/terraform-provider-authress).",
    "repository": "https://github.com/Authress/pulumi-authress",
    "logoUrl": "https://authress.io/app/img/logo.svg",
    "pluginDownloadURL": "github://api.github.com/Authress/pulumi-authress",
    "publisher": "Authress",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "nodejs": {
            "compatibility": "tfbridge20",
            "dependencies": {
                "@pulumi/pulumi": "^3.0.0"
            },
            "devDependencies": {
                "@types/mime": "^2.0.0",
                "@types/node": "^10.0.0"
            },
            "disableUnionOutputTypes": true,
            "packageDescription": "A Pulumi package for creating and managing Authress resources.",
            "packageName": "",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Authress/terraform-provider-authress)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-authress` repo](https://github.com/Authress/pulumi-authress/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-authress` repo](https://github.com/Authress/terraform-provider-authress/issues).",
            "typescriptVersion": ""
        },
        "python": {
            "compatibility": "tfbridge20",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/Authress/terraform-provider-authress)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-authress` repo](https://github.com/Authress/pulumi-authress/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-authress` repo](https://github.com/Authress/terraform-provider-authress/issues)."
        }
    },
    "config": {
        "variables": {
            "accessKey": {
                "type": "string",
                "description": "The access key for the Authress API. Should be [configured by your\nCI/CD](https://authress.io/knowledge-base/docs/category/cicd) for more information.\n",
                "secret": true
            },
            "customDomain": {
                "type": "string",
                "description": "Your Authress custom domain. [Configured a custom domain for Account](https://authress.io/app/#/settings?focus=domain)\nor use [provided domain](https://authress.io/app/#/api?route=overview).\n"
            }
        },
        "defaults": [
            "customDomain"
        ]
    },
    "types": {
        "authress:index/RolePermissions:RolePermissions": {
            "properties": {
                "allow": {
                    "type": "boolean"
                },
                "delegate": {
                    "type": "boolean"
                },
                "grant": {
                    "type": "boolean"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "allow",
                        "delegate",
                        "grant"
                    ]
                }
            }
        }
    },
    "provider": {
        "description": "The provider type for the authress package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "accessKey": {
                "type": "string",
                "description": "The access key for the Authress API. Should be [configured by your\nCI/CD](https://authress.io/knowledge-base/docs/category/cicd) for more information.\n",
                "secret": true
            },
            "customDomain": {
                "type": "string",
                "description": "Your Authress custom domain. [Configured a custom domain for Account](https://authress.io/app/#/settings?focus=domain)\nor use [provided domain](https://authress.io/app/#/api?route=overview).\n"
            }
        },
        "required": [
            "customDomain"
        ],
        "inputProperties": {
            "accessKey": {
                "type": "string",
                "description": "The access key for the Authress API. Should be [configured by your\nCI/CD](https://authress.io/knowledge-base/docs/category/cicd) for more information.\n",
                "secret": true
            },
            "customDomain": {
                "type": "string",
                "description": "Your Authress custom domain. [Configured a custom domain for Account](https://authress.io/app/#/settings?focus=domain)\nor use [provided domain](https://authress.io/app/#/api?route=overview).\n"
            }
        },
        "requiredInputs": [
            "customDomain"
        ]
    },
    "resources": {
        "authress:index/role:Role": {
            "properties": {
                "description": {
                    "type": "string",
                    "description": "An extended description field that can be used to store additional information about the usage of the role.\n"
                },
                "lastUpdated": {
                    "type": "string",
                    "description": "Timestamp of the last Terraform update of the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A helpful name for this role. The name displays in the Authress Management Portal\n"
                },
                "permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/authress:index/RolePermissions:RolePermissions"
                    },
                    "description": "A map of the permissions. The key of the map is the action the permission grants, can be scoped using `:` and parent\nactions imply sub-resource permissions, `action:*` or `action` implies `action:sub-action`. This property is\ncase-insensitive, it will always be cast to lowercase before comparing actions to user permissions.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "Unique identifier for the role, can be specified on creation, and used by records to map to permissions.\n"
                }
            },
            "required": [
                "description",
                "lastUpdated",
                "name",
                "permissions",
                "roleId"
            ],
            "inputProperties": {
                "description": {
                    "type": "string",
                    "description": "An extended description field that can be used to store additional information about the usage of the role.\n"
                },
                "name": {
                    "type": "string",
                    "description": "A helpful name for this role. The name displays in the Authress Management Portal\n"
                },
                "permissions": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/types/authress:index/RolePermissions:RolePermissions"
                    },
                    "description": "A map of the permissions. The key of the map is the action the permission grants, can be scoped using `:` and parent\nactions imply sub-resource permissions, `action:*` or `action` implies `action:sub-action`. This property is\ncase-insensitive, it will always be cast to lowercase before comparing actions to user permissions.\n"
                },
                "roleId": {
                    "type": "string",
                    "description": "Unique identifier for the role, can be specified on creation, and used by records to map to permissions.\n"
                }
            },
            "requiredInputs": [
                "name",
                "permissions",
                "roleId"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Role resources.\n",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "An extended description field that can be used to store additional information about the usage of the role.\n"
                    },
                    "lastUpdated": {
                        "type": "string",
                        "description": "Timestamp of the last Terraform update of the role.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "A helpful name for this role. The name displays in the Authress Management Portal\n"
                    },
                    "permissions": {
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/types/authress:index/RolePermissions:RolePermissions"
                        },
                        "description": "A map of the permissions. The key of the map is the action the permission grants, can be scoped using `:` and parent\nactions imply sub-resource permissions, `action:*` or `action` implies `action:sub-action`. This property is\ncase-insensitive, it will always be cast to lowercase before comparing actions to user permissions.\n"
                    },
                    "roleId": {
                        "type": "string",
                        "description": "Unique identifier for the role, can be specified on creation, and used by records to map to permissions.\n"
                    }
                },
                "type": "object"
            }
        }
    }
}